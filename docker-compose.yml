version: '3'
services:

  #PHP Service
  app:
    build:
    #   args:
    #     user: arzky
    #     uid: 1000
      context: .
      dockerfile: Dockerfile
    image: arzky/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
    #   - ./:/var/www
      - ./storage:/var/www/storage
      # - ./docker-compose/supervisor/logs:/var/log/supervisor
      - ./docker-compose/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8002:80"
    #   - "443:443"
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker-compose/nginx/logs:/var/log/nginx
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:8
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker-compose/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network
  # redis:
  #   image: redis:latest
  #   container_name: laravel-redis
  #   restart: unless-stopped
  #   networks:
  #     - app-network
#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
